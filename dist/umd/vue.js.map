{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/**\n * 重写数组的方法\n * 函数劫持，为了更新我们的视图\n */\nlet oldArrayPropertyMethods = Array.prototype;\n\n// 继承一份原有方法 arrayMethods.__proto__ = oldArrayPropertyMethods\nexport let arrayMethods = Object.create(oldArrayPropertyMethods);\n\nconst methods = ['push', 'pop', 'shift', 'unshift'];\n// 重新定数组原型\nmethods.forEach((methodName) => {\n  arrayMethods[methodName] = function (...args) {\n    // this就是\n    console.log('数组方法被调用,视图需要更新了');\n    // let result = oldArrayPropertyMethods[methodName].call(this, ...args);\n    oldArrayPropertyMethods[methodName].apply(this, args);\n    let inserted;\n    let ob = this.__ob__;\n    switch (methodName) {\n      case 'push': // arr.push({a:1},{b:2})\n      case 'unshift': // 这两个方法都是追加 追加的类型可能是对象类型，应该被再次进行劫持\n        inserted = args;\n      case 'splice': // vue.$set 原理\n        inserted = args.splice(2); // arr.splice(0,1,{a:1})\n        break;\n      default:\n        break;\n    }\n    if (inserted) ob.observeArray(inserted); // 给新增的数组值也要进行观测\n    return result;\n  };\n});\n","export function proxy(vm, data, key) {\n  // vm.a\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[data][key]; //vm._data.a\n    },\n    set(newValue) {\n      vm[data][key] = newValue;\n    },\n  });\n}\n\nexport function defineProperty(target, key, value) {\n  Object.defineProperty(target, key, {\n    enumerable: false, // 表示不能被循环出来\n    configurable: false,\n    value,\n  });\n}\n\nexport const unicodeLetters = 'a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD'\n","/**\n * 处理响应式数据\n * 针对观测的对象 我们创建一个观测类去观测我们的data，因为有可能是观测对象 数组 其他的一些方法，将\n * 这些东西耦合在一起，做成一个功能\n */\n\nimport { arrayMethods } from './array';\nimport { defineProperty } from '../util';\n\nclass Observer {\n  constructor(value) {\n    // 使用 defineProperty 重新定义属性\n\n    // 判断一个对象有没有被观测过，看他与没有ob属性\n    // 不可枚举的好处 就是我们 walk循环的时候是不能取到这个属性的\n    defineProperty(value, '__ob__');\n    // 我们希望 调用 push pop shift unshift sort reserve slice 的时候再通知数组 再去调原有的方法\n    // 函数劫持、切片编程 先去调自己的方法，如果自己方法没有，会找原型上的方法，如果自己有，再调原有的方法(切片、高阶函数)\n    if (Array.isArray(value)) {\n      value.__proto__ = arrayMethods;\n      // 观测数组中的对象类型，对象变化也要做一些事情\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n  walk(data) {\n    let keys = Object.keys(data);\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]); // vue.util.defineReactive\n    });\n  }\n\n  //对数组每一项执行响应化\n  observeArray(items) {\n    for (let i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  observe(value); // 如果值是对象类型，深度观测\n  Object.defineProperty(data, key, {\n    get() {\n      console.log('get 取值', data, key, value);\n      return value;\n    },\n    set(newValue) {\n      console.log('set 设置值', data, key, value);\n      if (newValue === value) return;\n      // 如果用户将值改为对象 继续监控\n      observe(newValue);\n      value = newValue;\n    },\n  });\n}\n\nexport function observe(data) {\n  // 观测对象\n  if (typeof data !== 'object' || data == null) {\n    return data;\n  }\n  // 因为最开始我们对所有的数据都进行了观测，且挂载了自定义属性 __ob__，防止数据被重复观测\n  if (data.__ob__) {\n    return data;\n  }\n  return new Observer(data);\n}\n","import { observe } from './observer/index';\nimport { proxy } from './util';\n\nexport function initState(vm) {\n  // vm.$options\n  // 针对不同的情况做 不同的初始化操作\n\n  let options = vm.$options;\n  if (options.props) {\n    initProps(vm);\n  }\n  if (options.methods) {\n    initMethods(vm);\n  }\n  if (options.data) {\n    initData(vm);\n  }\n  if (options.computed) {\n    initComputed(vm);\n  }\n  if (options.watch) {\n    initWatch(vm);\n  }\n}\n\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\n\nfunction initData(vm) {\n  let data = vm.$options.data;\n  // data 有可能是函数 有可能是对象 _data 代理当前函数的返回值\n  vm._data = data = typeof data === 'function' ? data.call(vm) : data;\n  // 属性代理\n  for (let key in data) {\n    // 我们取key值的时候，从vm._data中去取\n    proxy(vm, '_data', key);\n  }\n  observe(data);\n}\nfunction initComputed(vm) {}\nfunction initWatch(vm) {}\n","/**\n * 将html模板 转换为 render 函数\n * 直接是不能转化的\n * 将html用ast来描述，再将这样的结构转变成js语法，生成出对应的代码字符串\n * 1. 需要将 html 代码转化为 ast 语法树 可以用ast来描述语言本身，根据语法生成的特定逻辑(可以描述dom，也可以描述js语法)\n *\n * 比如 <div id='app'>123</div>\n * {\n *   attrs: [{id:'a'}]\n *   tags: 'div',\n *   children:[]\n * }\n * const a = 123\n * {\n *   identifier: const,\n *   name: a,\n *   value: 1\n * }\n * 虚拟 dom 是用来描述对象节点的 和 ast 是有区别的 一个是对语法，一个是对结构，层面不同\n *\n * 2. 通过这棵树，生成新的代码\n */\n\n/**\n *  <div id='root'>hello {{name}} <span>world</span></div>\n *\n * {\n *  tag:'div', 标签名\n *  parent: null,  是否有父元素\n *  type: 1， 元素类型\n *  attrs:[{id:'root'}], 是否有属性，\n *  children:[\n *  { tag: null, parent:'父div',attrs:[],text:'hello {{name}}' }\n *  { tag: span, parent:'父div',attrs:[],text:'world' }\n *  ]\n * }\n *\n * 一点点分析 到底是字符串 内容 属性\n * @param {*} html\n */\n\nimport { unicodeLetters } from '../util';\n\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeLetters}]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\nconst startTagClose = /^\\s*(\\/?)>/;\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\nconst doctype = /^<!DOCTYPE [^>]+>/i;\nconst comment = /^<!\\--/;\nconst conditionalComment = /^<!\\[/;\n\nfunction parseHtml(html) {}\n\nexport function complieToFunctions(template) {\n  let ast = parseHtml(template);\n}\n","/**\n * 针对当前需要初始化的操作做一些初始化\n * 将我们的Vue传入 执行初始化操作\n * Vue 是一个什么框架 不是mvvm框架，只是参考了其思想而已，非说是，那不严格\n * mvvm 的特点 - 数据变化视图会更新，视图变化会影响数据\n * mvvm有个条件，就是不能跳过数据去更新视图，但是vue中不遵循，比如 $ref 可以直接操作dom\n *\n */\n\nimport { initState } from './state';\nimport { complieToFunctions } from './compiler/index';\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    // 对实例拓展属性\n    const vm = this;\n    vm.$options = options;\n    // vue 核心特性 响应式原理\n    // 初始化状态 (将数据做一个初始化的拦截，当数据发生变更时，更新视图)\n    // vue组件中有很多状态，比如 data props watch computed 都和数据相关\n    initState(vm);\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n\n  /**\n   * 根据渲染操作处理对应情况\n   * 1. 默认会先找 render 方法\n   * 2. 默认没有传入 render 方法，会查找 template\n   * 3. 都没有，找当前 el 指定的内容，来进行渲染\n   * @param {*} el\n   */\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const options = vm.$options;\n    el = document.querySelector(el);\n    if (!options.render) {\n      let template = options.template;\n      if (!template && el) {\n        // 外部模板 outHtml 带上id的div\n        template = el.outHtml;\n      }\n      // 将template转换为render函数，需要实现这个编译函数\n      const render = complieToFunctions(template);\n      options.render = render;\n    }\n    console.log(options.render); // 最终渲染时，都使用这个render\n  };\n}\n","/**\n * 针对构造函数的原型拓展方法\n * es6的类的写法 是一个整体 不利于我们书写原型属性\n * 采用构造函数的形式 可以将对原型的拓展分散到不同的文件中\n *\n * 将各种方法整个成插件解耦出去，写成一个个插件对原型进行拓展\n */\n\nimport { initMixin } from './init';\nfunction Vue(options) {\n  this._init(options); // 入口方法 做初始化使用\n}\n\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":["oldArrayPropertyMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","methodName","args","console","log","apply","inserted","ob","__ob__","splice","observeArray","result","proxy","vm","data","key","defineProperty","get","set","newValue","target","value","enumerable","configurable","Observer","constructor","isArray","__proto__","walk","keys","defineReactive","items","i","l","length","observe","initState","options","$options","props","initData","computed","watch","_data","call","complieToFunctions","template","initMixin","Vue","_init","el","$mount","document","querySelector","render","outHtml"],"mappings":"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"}