{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/**\n * 重写数组的方法\n * 函数劫持，为了更新我们的视图\n */\nlet oldArrayPropertyMethods = Array.prototype;\n\n// 继承一份原有方法 arrayMethods.__proto__ = oldArrayPropertyMethods\nexport let arrayMethods = Object.create(oldArrayPropertyMethods);\n\nconst methods = ['push', 'pop', 'shift', 'unshift'];\n// 重新定数组原型\nmethods.forEach((methodName) => {\n  arrayMethods[methodName] = function (...args) {\n    // this就是\n    console.log('数组方法被调用,视图需要更新了');\n    // let result = oldArrayPropertyMethods[methodName].call(this, ...args);\n    oldArrayPropertyMethods[methodName].apply(this, args);\n    let inserted;\n    let ob = this.__ob__;\n    switch (methodName) {\n      case 'push': // arr.push({a:1},{b:2})\n      case 'unshift': // 这两个方法都是追加 追加的类型可能是对象类型，应该被再次进行劫持\n        inserted = args;\n      case 'splice': // vue.$set 原理\n        inserted = args.splice(2); // arr.splice(0,1,{a:1})\n        break;\n      default:\n        break;\n    }\n    if (inserted) ob.observeArray(inserted); // 给新增的数组值也要进行观测\n    return result;\n  };\n});\n","/**\n * 处理响应式数据\n * 针对观测的对象 我们创建一个观测类去观测我们的data，因为有可能是观测对象 数组 其他的一些方法，将\n * 这些东西耦合在一起，做成一个功能\n */\n\nimport { arrayMethods } from './array';\n\nclass Observer {\n  constructor(value) {\n    // 使用 defineProperty 重新定义属性\n\n    // 判断一个对象有没有被观测过，看他与没有ob属性\n    // 不可枚举的好处 就是我们 walk循环的时候是不能取到这个属性的\n    Object.defineProperty(value, '__ob__', {\n      enumerable: false, // 表示不能被循环出来\n      configurable: false,\n      value: this,\n    });\n\n    // 我们希望 调用 push pop shift unshift sort reserve slice 的时候再通知数组 再去调原有的方法\n    // 函数劫持、切片编程 先去调自己的方法，如果自己方法没有，会找原型上的方法，如果自己有，再调原有的方法(切片、高阶函数)\n    if (Array.isArray(value)) {\n      value.__proto__ = arrayMethods;\n      // 观测数组中的对象类型，对象变化也要做一些事情\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n  walk(data) {\n    let keys = Object.keys(data);\n    keys.forEach((key) => {\n      defineRective(data, key, data[key]); // vue.util.defineRective\n    });\n  }\n\n  //对数组每一项执行响应化\n  observeArray(items) {\n    for (let i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  }\n}\n\nfunction defineRective(data, key, value) {\n  observe(value); // 如果值是对象类型，深度观测\n  Object.defineProperty(data, key, {\n    get() {\n      console.log('get 取值', data, key, value);\n      return value;\n    },\n    set(newValue) {\n      console.log('set 设置值', data, key, value);\n      if (newValue === value) return;\n      // 如果用户将值改为对象 继续监控\n      observe(newValue);\n      value = newValue;\n    },\n  });\n}\n\nexport function observe(data) {\n  // 观测对象\n  if (typeof data !== 'object' || data == null) {\n    return data;\n  }\n  // 因为最开始我们对所有的数据都进行了观测，且挂载了自定义属性 __ob__，防止数据被重复观测\n  if (data.__ob__) {\n    return data;\n  }\n  return new Observer(data);\n}\n","import { observe } from './observer/index';\n\nexport function initState(vm) {\n  // vm.$options\n  // 针对不同的情况做 不同的初始化操作\n\n  let options = vm.$options;\n  if (options.props) {\n    initProps(vm);\n  }\n  if (options.methods) {\n    initMethods(vm);\n  }\n  if (options.data) {\n    initData(vm);\n  }\n  if (options.computed) {\n    initComputed(vm);\n  }\n  if (options.watch) {\n    initWatch(vm);\n  }\n}\n\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\nfunction initData(vm) {\n  let data = vm.$options.data;\n  // data 有可能是函数 有可能是对象 _data 代理当前函数的返回值\n  vm._data = data = typeof data === 'function' ? data.call(vm) : data;\n  observe(data);\n}\nfunction initComputed(vm) {}\nfunction initWatch(vm) {}\n","/**\n * 针对当前需要初始化的操作做一些初始化\n * 将我们的Vue传入 执行初始化操作\n * Vue 是一个什么框架 不是mvvm框架，只是参考了其思想而已，非说是，那不严格\n * mvvm 的特点 - 数据变化视图会更新，视图变化会影响数据 \n * mvvm有个条件，就是不能跳过数据去更新视图，但是vue中不遵循，比如 $ref 可以直接操作dom\n * \n */\n\nimport { initState } from \"./state\";\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    // 对实例拓展属性\n    const vm = this;\n    vm.$options = options;\n    // vue 核心特性 响应式原理\n    // 初始化状态 (将数据做一个初始化的拦截，当数据发生变更时，更新视图)\n    // vue组件中有很多状态，比如 data props watch computed 都和数据相关 \n    initState(vm)\n  };\n}\n","/**\n * 针对构造函数的原型拓展方法\n * es6的类的写法 是一个整体 不利于我们书写原型属性\n * 采用构造函数的形式 可以将对原型的拓展分散到不同的文件中\n *\n * 将各种方法整个成插件解耦出去，写成一个个插件对原型进行拓展\n */\n\nimport { initMixin } from './init';\nfunction Vue(options) {\n  this._init(options); // 入口方法 做初始化使用\n}\n\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":["oldArrayPropertyMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","methodName","args","console","log","apply","inserted","ob","__ob__","splice","observeArray","result","Observer","constructor","value","defineProperty","enumerable","configurable","isArray","__proto__","walk","data","keys","key","defineRective","items","i","l","length","observe","get","set","newValue","initState","vm","options","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init"],"mappings":"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"}